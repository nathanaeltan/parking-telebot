version: "3.5"

volumes:
    mongodb: ~
    timescale-db: ~
    data-models:
      driver: local
      driver_opts:
        type: none
        o: bind
        device: datamodels

services:
  ################
  # Applications #
  ################

  # API Gateway for various services
  proxy:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile.orion.aio
    restart: always
    ports:
      - "80:80"
  
  # @context file is served from here
  ld-context:
      labels:
        org.fiware: 'tutorial'
      image: httpd:alpine
      hostname: context
      container_name: fiware-ld-context
      ports:
          - "3004:80"
      volumes:
          - data-models:/usr/local/apache2/htdocs/
          - type: bind
            source: conf/mime.types
            target: /usr/local/apache2/conf/mime.types
            read_only: true
      healthcheck:
        test: (wget --server-response --spider --quiet  http://ld-context/ngsi-context.jsonld 2>&1 | awk 'NR==1{print $$2}'|  grep -q -e "200") || exit 1

  # Context Broker
  orion:
    platform: linux/amd64
    image: quay.io/fiware/orion-ld:1.5.1
    hostname: orion
    container_name: fiware-orion
    # sometimes the initial startup fails due to a weird timescale behaviour
    restart: always
    environment:
      - ORIONLD_TROE=TRUE
      - ORIONLD_TROE_USER=orion
      - ORIONLD_TROE_PWD=orion
      - ORIONLD_TROE_HOST=timescale
      - ORIONLD_MONGO_HOST=mongodb
      - ORIONLD_CORS_ALLOWED_ORIGIN=__ALL
    depends_on:
      - mongodb
      - timescale
    ports:
      - "1026:1026"
    command: -logLevel DEBUG -forwarding -experimental
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
      interval: 10s

  # Open-Source component for Temporal Representation of Entities (TROE)
  mintaka:
    image: fiware/mintaka:0.4.3
    hostname: mintaka
    restart: always
    container_name: mintaka
    environment:
      - DATASOURCES_DEFAULT_HOST=timescale
      - DATASOURCES_DEFAULT_USERNAME=orion
      - DATASOURCES_DEFAULT_PASSWORD=orion
      - DATASOURCES_DEFAULT_DATABSE=orion
    expose:
      - "8080"
    ports:
      - "8080:8080"

  # MQTT Broker for IOT Agent
  mosquitto:
      image: eclipse-mosquitto:latest
      container_name: mosquitto
      ports:
        - "1883:1883"
        - "9001:9001"  # Optional: for WebSocket support
      restart: always
      volumes:
        - ./mosquitto:/mosquitto

  # JSON IOT Agent that supports HTTP, MQTT and AMQP
  iot-agent:
      image: quay.io/fiware/iotagent-json:3.1.0-distroless
      hostname: iot-agent
      container_name: fiware-iot-agent
      depends_on:
          - mongodb
          - mosquitto
          - ld-context
      expose:
          - "4041"
          - "7896"
      ports:
          - "4041:4041"
          - "7896:7896"
      environment:
          - "IOTA_CB_HOST=orion" # Locally hosted broker
          - "IOTA_CB_PORT=1026"
          - "IOTA_NORTH_PORT=4041"
          - "IOTA_REGISTRY_TYPE=mongodb"
          - "IOTA_MONGO_HOST=mongodb"
          - "IOTA_MONGO_PORT=27017"
          - "IOTA_MONGO_DB=iotagent-json"
          - "IOTA_HTTP_PORT=7896"
          - "IOTA_PROVIDER_URL=http://iot-agent:4041"
          - "IOTA_CB_NGSI_VERSION=ld"         # To work with NGSI-LD brokers
          - "IOTA_TIMESTAMP=true"
          - "IOTA_FALLBACK_TENANT=openiot"
          - "IOTA_FALLBACK_PATH=/"
          - "IOTA_MQTT_HOST=mosquitto"        # MQTT broker service
          - "IOTA_MQTT_PORT=1883"             # MQTT service port
          - "IOTA_JSON_LD_CONTEXT=http://ld-context:80/context.jsonld"
          - "IOTA_LOG_LEVEL=DEBUG" # The log level of the IoT Agent
          - "IOTA_AUTOCAST=true" # Ensure number values are read as numbers not strings

  #############
  # Databases #
  #############

  # Storage of context data from context brokers and IOT agent
  mongodb:
      image: mongo:4.2
      hostname: mongodb
      container_name: db-mongo
      ports:
          - "27017:27017"
      command: --bind_ip_all
      volumes:
          - mongodb:/data

  # Time series database for TROE (Temporal data)
  timescale:
    image: timescale/timescaledb-postgis:1.7.5-pg12
    hostname: timescale
    container_name: timescale
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orion" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 60s
    environment:
      - POSTGRES_USER=orion
      - POSTGRES_PASSWORD=orion
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - timescale-db:/var/lib/postgresql/data
